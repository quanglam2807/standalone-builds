name: Singlebox (Windows)

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get Neutron version
      run: echo NEUTRON_VERSION=$(cat neutron-version $1) >> $GITHUB_ENV
      shell: bash
    - uses: actions/checkout@v2
      with:
        repository: 'webcatalog/neutron'
        ref: v${{ env.NEUTRON_VERSION }}
        path: 'neutron'
        fetch-depth: 1
        submodules: false
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Get tag name
      run: echo CI_BUILD_TAG=${GITHUB_REF/refs\/tags\//} >> $GITHUB_ENV
      shell: bash
      if: startsWith(github.ref, 'refs/tags/')
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
      if: startsWith(github.ref, 'refs/tags/')
    - name: Install AzureSignTool
      run: dotnet tool install --global AzureSignTool
      if: startsWith(github.ref, 'refs/tags/')
    - name: Set up Castlabs EVS
      run: |
        python3 -m pip install --upgrade castlabs-evs
        python3 -m castlabs_evs.account reauth
      env:
        EVS_NO_ASK: 1
        EVS_ACCOUNT_NAME: ${{ secrets.CASTLABS_EVS_ACCOUNT_NAME }}
        EVS_PASSWD: ${{ secrets.CASTLABS_EVS_PASSWORD }}
      if: startsWith(github.ref, 'refs/tags/')
    # npm-14-bundled node-gyp (5.x) can't find  VS2022 used by GH Actions
    # https://github.com/nodejs/node-gyp/issues/2520
    - name: Upgrade node-gyp
      run: |
        npm install --global node-gyp@latest
        npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
      shell: powershell
    - name: Build Singlebox
      run: |
        cp apps/singlebox/config.json neutron/
        cp -r apps/singlebox/build-resources neutron
        cp build-standalone.js neutron
        cd neutron
        yarn --prefer-offline --network-timeout 600000
        yarn lint
        yarn build
        node build-standalone.js
      env:
        CI: true
        CI_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        REACT_APP_LICENSE_SECRET: ${{ secrets.REACT_APP_LICENSE_SECRET_SINGLEBOX }}
        REACT_APP_LICENSE_SECRET_LEGACY: ${{ secrets.REACT_APP_LICENSE_SECRET_SINGLEBOX_LEGACY }}
        REACT_APP_AMPLITUDE_API_KEY: ${{ secrets.REACT_APP_AMPLITUDE_API_KEY }}
        REACT_APP_ELASTIC_CLOUD_APP_SEARCH_SEARCH_KEY: ${{ secrets.REACT_APP_ELASTIC_CLOUD_APP_SEARCH_SEARCH_KEY }}
        REACT_APP_ELASTIC_CLOUD_APP_SEARCH_API_ENDPOINT: ${{ secrets.REACT_APP_ELASTIC_CLOUD_APP_SEARCH_API_ENDPOINT }}
        REACT_APP_ELASTIC_CLOUD_APP_SEARCH_ENGINE_NAME: ${{ secrets.REACT_APP_ELASTIC_CLOUD_APP_SEARCH_ENGINE_NAME }}
        ELECTRON_APP_SENTRY_DSN: ${{ secrets.ELECTRON_APP_SENTRY_DSN }}
        AZURE_KEY_VAULT_TENANT_ID: ${{ secrets.AZURE_KEY_VAULT_TENANT_ID }}
        AZURE_KEY_VAULT_CLIENT_ID: ${{ secrets.AZURE_KEY_VAULT_CLIENT_ID }}
        AZURE_KEY_VAULT_CLIENT_SECRET: ${{ secrets.AZURE_KEY_VAULT_CLIENT_SECRET }}
        AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
        AZURE_KEY_VAULT_CERT_NAME: ${{ secrets.AZURE_KEY_VAULT_CERT_NAME }}
        ELECTRON_APP_GOOGLE_API_KEY: ${{ secrets.ELECTRON_APP_GOOGLE_API_KEY }}
      if: startsWith(github.ref, 'refs/tags/')
